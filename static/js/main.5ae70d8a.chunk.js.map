{"version":3,"sources":["components/Pokedex.jsx","components/App.jsx","index.js"],"names":["Pokedex","props","getPokemon","id","pokemonBuscado","state","filterPokemons","find","pokemon","updateParent","name","type","handleFilter","event","input","target","value","pokemonsFiltrados","pokemons","filter","toLowerCase","startsWith","setState","searched","handleClean","preventDefault","this","className","placeholder","onChange","onClick","map","Component","App","update","fetchAllPokemons","toString","length","getTypes","phrase","index","pokedex","loading","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ae70d8a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"../styles/Pokedex.css\"\n\nexport default class Pokedex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterPokemons: [],\n            searched: \"\",\n        }\n    }\n\n\n    // AREA DE TRABAJO --> Usemos el ciclo de vida nuevamente para setear por unica vez lo que nos llega por props el filterPokemons\n    componentWillMount()\n    {\n        this.setState({ filterPokemons: this.props.pokemons})\n    }\n\n    getPokemon = (id) => {\n        // Aqui esperas obtener los datos del pokemon y luego enviarlo con la funcion updateParent\n        // Solamente necesitas el name, id y types\n        let pokemonBuscado = this.state.filterPokemons.find( pokemon => pokemon.id === id);\n        this.props.updateParent({pokemon: [pokemonBuscado.name, id, pokemonBuscado.type] });\n    }\n\n\n    \n    //Aqui deberían ir las funciones para los eventos del input y del button\n\n    handleFilter = (event) => {\n        /* Filtrar los pokemons segun lo que le llegue por evento al event.target.value\n        Pueden usar un console.log para ver que devuelve */\n        const input = event.target.value;\n        let pokemonsFiltrados = this.props.pokemons.filter( pokemon => pokemon.name.toLowerCase().startsWith(input.toLowerCase()));\n        this.setState({ filterPokemons: pokemonsFiltrados, searched: input });\n    }\n\n\n\n    handleClean = (event) => {\n       /* Debo evitar que se renderice nuevamente la pagina\n        Debo setear todos los pokemons nuevamente y limpiar el input */\n        event.preventDefault();\n        this.setState({ filterPokemons: this.props.pokemons, searched: \"\" });\n    }\n\n    \n\n\n    render() {\n        const { filterPokemons } = this.state;\n        return (\n            <div className=\"pokeContainer\">\n                <h2>POKEDEX</h2>\n                <form className=\"pokeSearch\">\n                    {/* AREA DE TRABAJO PARA CREAR DOS EVENTOS, uno para el input y otro para el button */}\n                    <input type=\"text\" placeholder=\"Filtra los pokemon\" value={this.state.searched} onChange={this.handleFilter} />\n                    <button onClick={this.handleClean}>Limpiar</button>\n                </form>\n                <div className=\"pokeList\">\n                    {filterPokemons.map(pokemon => (\n                        <p key={pokemon.name} onClick={() => this.getPokemon(pokemon.id)} className=\"pokeOption\">{pokemon.name}</p>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport \"../styles/App.css\"\nimport Pokedex from './Pokedex';\nimport pokedex from \"../pokedex.json\"\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pokemon: [pokedex[0].name, pokedex[0].id, pokedex[0].type],\n      pokemons: pokedex,\n      loading: true // Un loader siempre es buena practica cuando no tengo la data todavia\n      // cuando hacemos pedido a una api puede tardar... dejala en false por favor :)\n    }\n  }\n\n  update = (pokemon) => this.setState(pokemon)\n\n  fetchAllPokemons = `https://pokeapi.co/api/v2/pokemon?limit=50`; // URL para obtener los 50 primeros pokemons\n\n\n  // ESPACIO DE TRABAJO --> Usemos el ciclo de vida para setear los pokemons por unica vez cuando se renderiza el componente\n  /*componentWillMount()\n  {\n    this.setState({ })\n  }*/\n\n  // -------------------------------------------------------\n\n\n  getPokemon = () => {\n    const { pokemon } = this.state\n    if (pokemon[1]?.toString()?.length === 1) return `00${pokemon[1]}`\n    if (pokemon[1]?.toString()?.length === 2) return `0${pokemon[1]}`\n    if (pokemon[1]?.toString()?.length === 3) return `${pokemon[1]}`\n  }\n\n  getTypes = () => {\n    let phrase;\n    const { pokemon } = this.state;\n    // Aqui hay que arreglar algo... ¿Que podra ser?\n\n    if (pokemon[2].length === 1) return pokemon[2][0] // Miremos el objeto  que nos devuelve\n    if (pokemon[2].length > 1) {\n      for (let index = 0; index < pokemon[2].length; index++) {\n        if (index === 0) phrase = pokemon[2][index]\n        if (index !== 0) phrase = `${phrase} and ${pokemon[2][index]}`\n      }\n      return phrase\n    }\n  }\n\n  render() {\n    const { loading, pokemons, pokemon } = this.state;\n    return loading ? (\n      <div className=\"app\">\n        <div className=\"container\">\n          {pokemon.length ?\n            (\n              <>\n                <img id=\"pokemonImg\" src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${this.getPokemon()}.png`} alt={pokemon[0]} />\n                <p id=\"name\">{`${pokemon[0]} is a pokemon type ${this.getTypes()}`}</p>\n              </>\n            ) : null\n          }\n        </div>\n        <Pokedex updateParent={this.update} pokemons={pokemons} />\n      </div>\n    ) : (\n      <div className=\"warning\">\n        <h1>EL LOADER ESTA FALSE</h1>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}